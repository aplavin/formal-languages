== Automaton A1 ==
--------------------------------------------------------------------------------
- Representations -
--------------------------------------------------------------------------------
Haskell definition:
-------------------
NFA{states = fromList ["1", "2", "3", "4"], sigma = fromList "ab",
    delta =
      fromList
        [(("1", Nothing), fromList ["3"]),
         (("1", Just 'a'), fromList ["1", "2"]),
         (("1", Just 'b'), fromList ["1"]),
         (("2", Nothing), fromList ["4"]),
         (("2", Just 'a'), fromList ["3"]),
         (("2", Just 'b'), fromList ["3"]),
         (("3", Nothing), fromList ["2"]),
         (("3", Just 'b'), fromList ["4"]),
         (("4", Nothing), fromList ["2"]),
         (("4", Just 'a'), fromList ["4"]),
         (("4", Just 'b'), fromList ["4"])],
    startState = "1", acceptStates = fromList ["4"]}
--------------------------------------------------------------------------------
Table:
------
	a	b
>1	1,2	1
2	3	3
3	-	4
4F	4	4
--------------------------------------------------------------------------------
LaTeX table:
------------
\begin{tabular}{|l|c|c|}
\hline
& $a$ & $b$ \\
\hline
 $\ra 1$ & $3$ & $1,2$ & $1$ \\
 $2$ & $4$ & $3$ & $3$ \\
 $3$ & $2$ & $4$ \\
 $4 F$ & $2$ & $4$ & $4$ \\
\hline
\end{tabular}

--------------------------------------------------------------------------------
Accepted words [A] (99 of first 100):
a, b, aa, ab, ba, bb, aaa, aab, aba, abb, baa, bab, bba, bbb, aaaa, aaab, aaba, aabb, abaa, abab, abba, abbb, baaa, baab, baba, babb, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aaabb, aabaa, aabab, aabba, aabbb, abaaa, abaab, ababa, ababb, abbaa, abbab, abbba, abbbb, baaaa, baaab, baaba, baabb, babaa, babab, babba, babbb, bbaaa, bbaab, bbaba, bbabb, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaaabb, aaabaa, aaabab, aaabba, aaabbb, aabaaa, aabaab, aababa, aababb, aabbaa, aabbab, aabbba, aabbbb, abaaaa, abaaab, abaaba, abaabb, ababaa, ababab, ababba, ababbb, abbaaa, abbaab, abbaba, abbabb, abbbaa, abbbab, abbbba, abbbbb, baaaaa, baaaab, baaaba, baaabb, baabaa
--------------------------------------------------------------------------------
Accepted words [REGEX] (37 of first 100):
abb, aabb, abba, abbb, babb, aaabb, aabba, aabbb, ababb, abbaa, abbab, abbba, abbbb, baabb, babba, babbb, bbabb, aaaabb, aaabba, aaabbb, aababb, aabbaa, aabbab, aabbba, aabbbb, abaabb, ababba, ababbb, abbaaa, abbaab, abbaba, abbabb, abbbaa, abbbab, abbbba, abbbbb, baaabb
--------------------------------------------------------------------------------
Rejected words [A] (1 of first 100):
\eps
--------------------------------------------------------------------------------
Rejected words [REGEX] (63 of first 100):
\eps, a, b, aa, ab, ba, bb, aaa, aab, aba, baa, bab, bba, bbb, aaaa, aaab, aaba, abaa, abab, baaa, baab, baba, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aabaa, aabab, abaaa, abaab, ababa, baaaa, baaab, baaba, babaa, babab, bbaaa, bbaab, bbaba, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaabaa, aaabab, aabaaa, aabaab, aababa, abaaaa, abaaab, abaaba, ababaa, ababab, baaaaa, baaaab, baaaba, baabaa
--------------------------------------------------------------------------------
Diff words [A \ REGEX] (62 of first 100):
a, b, aa, ab, ba, bb, aaa, aab, aba, baa, bab, bba, bbb, aaaa, aaab, aaba, abaa, abab, baaa, baab, baba, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aabaa, aabab, abaaa, abaab, ababa, baaaa, baaab, baaba, babaa, babab, bbaaa, bbaab, bbaba, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaabaa, aaabab, aabaaa, aabaab, aababa, abaaaa, abaaab, abaaba, ababaa, ababab, baaaaa, baaaab, baaaba, baabaa
--------------------------------------------------------------------------------
Diff words [REGEX \ A] (0 of first 100):
None

================================================================================
== Automaton Autom ==
--------------------------------------------------------------------------------
- Representations -
--------------------------------------------------------------------------------
Haskell definition:
-------------------
NFA{states = fromList ["1", "2", "3", "4"], sigma = fromList "ab",
    delta =
      fromList
        [(("1", Just 'a'), fromList ["1", "2"]),
         (("1", Just 'b'), fromList ["2"]),
         (("2", Just 'a'), fromList ["4"]),
         (("2", Just 'b'), fromList ["3"]),
         (("3", Just 'a'), fromList ["4"]),
         (("3", Just 'b'), fromList ["4"]),
         (("4", Just 'a'), fromList ["4"]),
         (("4", Just 'b'), fromList ["4"])],
    startState = "1", acceptStates = fromList ["4"]}
--------------------------------------------------------------------------------
Table:
------
	a	b
>1	1,2	2
2	4	3
3	4	4
4F	4	4
--------------------------------------------------------------------------------
LaTeX table:
------------
\begin{tabular}{|l|c|c|}
\hline
& $a$ & $b$ \\
\hline
 $\ra 1$ & $1,2$ & $2$ \\
 $2$ & $4$ & $3$ \\
 $3$ & $4$ & $4$ \\
 $4 F$ & $4$ & $4$ \\
\hline
\end{tabular}

--------------------------------------------------------------------------------
Accepted words [A] (95 of first 100):
aa, ba, aaa, aab, aba, abb, baa, bab, bba, bbb, aaaa, aaab, aaba, aabb, abaa, abab, abba, abbb, baaa, baab, baba, babb, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aaabb, aabaa, aabab, aabba, aabbb, abaaa, abaab, ababa, ababb, abbaa, abbab, abbba, abbbb, baaaa, baaab, baaba, baabb, babaa, babab, babba, babbb, bbaaa, bbaab, bbaba, bbabb, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaaabb, aaabaa, aaabab, aaabba, aaabbb, aabaaa, aabaab, aababa, aababb, aabbaa, aabbab, aabbba, aabbbb, abaaaa, abaaab, abaaba, abaabb, ababaa, ababab, ababba, ababbb, abbaaa, abbaab, abbaba, abbabb, abbbaa, abbbab, abbbba, abbbbb, baaaaa, baaaab, baaaba, baaabb, baabaa
--------------------------------------------------------------------------------
Accepted words [REGEX] (37 of first 100):
abb, aabb, abba, abbb, babb, aaabb, aabba, aabbb, ababb, abbaa, abbab, abbba, abbbb, baabb, babba, babbb, bbabb, aaaabb, aaabba, aaabbb, aababb, aabbaa, aabbab, aabbba, aabbbb, abaabb, ababba, ababbb, abbaaa, abbaab, abbaba, abbabb, abbbaa, abbbab, abbbba, abbbbb, baaabb
--------------------------------------------------------------------------------
Rejected words [A] (5 of first 100):
\eps, a, b, ab, bb
--------------------------------------------------------------------------------
Rejected words [REGEX] (63 of first 100):
\eps, a, b, aa, ab, ba, bb, aaa, aab, aba, baa, bab, bba, bbb, aaaa, aaab, aaba, abaa, abab, baaa, baab, baba, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aabaa, aabab, abaaa, abaab, ababa, baaaa, baaab, baaba, babaa, babab, bbaaa, bbaab, bbaba, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaabaa, aaabab, aabaaa, aabaab, aababa, abaaaa, abaaab, abaaba, ababaa, ababab, baaaaa, baaaab, baaaba, baabaa
--------------------------------------------------------------------------------
Diff words [A \ REGEX] (58 of first 100):
aa, ba, aaa, aab, aba, baa, bab, bba, bbb, aaaa, aaab, aaba, abaa, abab, baaa, baab, baba, bbaa, bbab, bbba, bbbb, aaaaa, aaaab, aaaba, aabaa, aabab, abaaa, abaab, ababa, baaaa, baaab, baaba, babaa, babab, bbaaa, bbaab, bbaba, bbbaa, bbbab, bbbba, bbbbb, aaaaaa, aaaaab, aaaaba, aaabaa, aaabab, aabaaa, aabaab, aababa, abaaaa, abaaab, abaaba, ababaa, ababab, baaaaa, baaaab, baaaba, baabaa
--------------------------------------------------------------------------------
Diff words [REGEX \ A] (0 of first 100):
None


